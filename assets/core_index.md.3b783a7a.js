import{_ as t,o as s,c as a,Q as n}from"./chunks/framework.a3f1684a.js";const q=JSON.parse('{"title":"核心接口","description":"","frontmatter":{},"headers":[],"relativePath":"core/index.md","filePath":"core/index.md"}'),o={name:"core/index.md"},l=n(`<h1 id="核心接口" tabindex="-1">核心接口 <a class="header-anchor" href="#核心接口" aria-label="Permalink to &quot;核心接口&quot;">​</a></h1><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>一言核心接口是萌创团队在开发过程中，暴露给外部环境，方便开发的系列接口。它们实现了：</p><ul><li>用户操作</li><li>句子操作</li><li>评分操作</li><li>举报操作</li></ul><p>的功能。目前，这些接口可通过无状态模型使用。</p><h2 id="接口地址" tabindex="-1">接口地址 <a class="header-anchor" href="#接口地址" aria-label="Permalink to &quot;接口地址&quot;">​</a></h2><p>核心接口实现了两套认证机制，分别对应两个入口：</p><ul><li>无状态服务： <a href="https://hitokoto.cn/api/restful/v1" target="_blank" rel="noreferrer">https://hitokoto.cn/api/restful/v1</a></li><li>会话认证：<a href="https://hitokoto.cn/api/common/v1" target="_blank" rel="noreferrer">https://hitokoto.cn/api/common/v1</a></li></ul><blockquote><p>基于会话认证的接口的最初目的是便于前端调用，因此具备 CSRF 验证，不适合开发者使用。</p></blockquote><h2 id="约束" tabindex="-1">约束 <a class="header-anchor" href="#约束" aria-label="Permalink to &quot;约束&quot;">​</a></h2><blockquote><p>接下来，我们便以 <strong>无状态</strong> 接口作为入口进行讲解。</p></blockquote><h3 id="认证方式" tabindex="-1">认证方式 <a class="header-anchor" href="#认证方式" aria-label="Permalink to &quot;认证方式&quot;">​</a></h3><p>无状态服务通过令牌（<code>token</code>）认证，因此每个需要验权的接口，其请求必须包含 <code>token</code> 字段。 目前支持三种验证方式：</p><ul><li>请求参数，形如： <code>?token=xxxxx</code></li><li>POST 参数（表单），例如：在 POST 表单中添加 <code>&lt;input type=&quot;hidden&quot; name=&quot;token&quot; value=&quot;xxxx&quot; &gt;</code></li><li><code>bearer</code> 授权</li></ul><h3 id="返回约束" tabindex="-1">返回约束 <a class="header-anchor" href="#返回约束" aria-label="Permalink to &quot;返回约束&quot;">​</a></h3><p>返回结构以方便，可快捷测试，方便检验为目标。以下为参数的约束：</p><table><thead><tr><th>参数</th><th>例子</th><th>定义</th></tr></thead><tbody><tr><td>status</td><td>200</td><td>状态码。正整数定义符合 HTTP 状态码约束，自定义错误为负值。请注意，由于偷懒，目前错误码存在重复定义，请以具体接口为准。</td></tr><tr><td>message</td><td>&quot;ok.&quot;</td><td>信息，当状态码不为 200 时，补充说明错误的字段。</td></tr><tr><td>data</td><td>[]</td><td>当状态码为 200 时，且接口不为无返回接口，该字段会返回一个长度大于等于 1 的数组；400 状态码下可能包含校验器的报错信息；其余时候为空数组</td></tr><tr><td>ts</td><td>1581759895072</td><td>接口时间戳，可用于时间比对</td></tr></tbody></table><p>下面是一个示例： <code>GET</code> <code>https://hitokoto.cn/api/restful/v1/hitokoto/62c12303-b3fa-4720-a7c5-2985bf049e60?token=xxx</code></p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;status&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;message&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;ok.&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;data&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;hitokoto&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;过去都是假的，回忆是一条没有归途的路，以往的一切春天都无法复原，即使最狂热最坚贞的爱情，归根结底也不过是一种瞬息即逝的现实，唯有孤独永恒。&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;uuid&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;62c12303-b3fa-4720-a7c5-2985bf049e60&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;d&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;from&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;百年孤独&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;from_who&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;creator&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;戎歌&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;creator_uid&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1195</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;reviewer&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;commit_from&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;web&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;created_at&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;1532672964&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;status&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;accept&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  ],</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;ts&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1582053586728</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;status&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">200</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;message&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;ok.&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;data&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;hitokoto&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;过去都是假的，回忆是一条没有归途的路，以往的一切春天都无法复原，即使最狂热最坚贞的爱情，归根结底也不过是一种瞬息即逝的现实，唯有孤独永恒。&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;uuid&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;62c12303-b3fa-4720-a7c5-2985bf049e60&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;d&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;from&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;百年孤独&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;from_who&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;creator&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;戎歌&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;creator_uid&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1195</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;reviewer&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;commit_from&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;web&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;created_at&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;1532672964&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;status&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;accept&quot;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;ts&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1582053586728</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><blockquote><p><strong>请注意: 接口会尽量使 HTTP 状态码为 200，但是由于上游中间件的问题，会出现 HTTP 不为 200 的情况，需要开发者自行处理。</strong></p></blockquote><h2 id="接口方法" tabindex="-1">接口方法 <a class="header-anchor" href="#接口方法" aria-label="Permalink to &quot;接口方法&quot;">​</a></h2><p>本节将提供目前暴露的接口表，方便快速查询。</p><blockquote><p><strong>请求头请添加 <code>Accept: application/json</code> 以保证接口输出一定是 JSON。</strong><br> 由于 Laravel 底层对 PUT 方法的支持不好，提交 PUT 参数时一定要以 <code>x-www-form-urlencoded</code> 方法提交参数。<br> 或者，你可以使用 <code>POST</code> 方法，额外添加一个字段 <code>_method: &quot;PUT&quot;</code> 模拟 PUT 请求。</p></blockquote><h3 id="用户部分" tabindex="-1">用户部分 <a class="header-anchor" href="#用户部分" aria-label="Permalink to &quot;用户部分&quot;">​</a></h3><table><thead><tr><th>地址</th><th>方法</th><th>鉴权</th><th>无返回</th><th>备注</th></tr></thead><tbody><tr><td>/auth/login</td><td>POST</td><td>N</td><td>N</td><td>登录接口，成功返回用户信息（包含令牌）</td></tr><tr><td>/auth/register</td><td>POST</td><td>N</td><td>N</td><td>注册接口，成功返回用户信息。</td></tr><tr><td>/auth/password/reset</td><td>POST</td><td>N</td><td>Y</td><td>重置密码接口</td></tr><tr><td>/like</td><td>GET</td><td>N</td><td>N</td><td>返回句子赞的相关信息</td></tr><tr><td>/like</td><td>POST</td><td>N</td><td>N</td><td>提交赞，成功返回提交者 IP</td></tr><tr><td>/like/cancel</td><td>GET</td><td>Y</td><td>N</td><td>撤回已经发出的喜爱</td></tr><tr><td>/mark</td><td>GET</td><td>N</td><td>N</td><td>获取所有的审核标记</td></tr><tr><td>/user</td><td>GET</td><td>Y</td><td>N</td><td>获取用户信息</td></tr><tr><td>/user/email/verify</td><td>PUT</td><td>Y</td><td>Y</td><td>申请验证邮箱</td></tr><tr><td>/user/token</td><td>GET</td><td>Y</td><td>N</td><td>返回用户令牌的相关信息</td></tr><tr><td>/user/token/refresh</td><td>PUT</td><td>Y</td><td>N</td><td>重置令牌，返回新令牌的相关信息</td></tr><tr><td>/user/password</td><td>PUT</td><td>Y</td><td>Y</td><td>修改密码</td></tr><tr><td>/user/email</td><td>PUT</td><td>Y</td><td>Y</td><td>修改邮箱（未来行为可能发生变化）</td></tr><tr><td>/user/notification/settings</td><td>GET</td><td>Y</td><td>N</td><td>获取用户通知设置</td></tr><tr><td>/user/notification/settings</td><td>PUT</td><td>Y</td><td>N</td><td>设定用户通知设置，返回新设置</td></tr><tr><td>/user/hitokoto/summary</td><td>GET</td><td>Y</td><td>N</td><td>获得用户一言提交数据的概览</td></tr><tr><td>/user/hitokoto/like</td><td>GET</td><td>Y</td><td>N</td><td>获得用户赞的句子</td></tr><tr><td>/user/hitokoto/history</td><td>GET</td><td>Y</td><td>N</td><td>获得用户历史的一言提交</td></tr><tr><td>/user/hitokoto/history/pending</td><td>GET</td><td>Y</td><td>N</td><td>获得用户历史的一言提交（审核中部分）</td></tr><tr><td>/user/hitokoto/history/refuse</td><td>GET</td><td>Y</td><td>N</td><td>获得用户历史的一言提交（已拒绝部分）</td></tr><tr><td>/user/hitokoto/history/accept</td><td>GET</td><td>Y</td><td>N</td><td>获得用户历史的一言提交（已上线部分）</td></tr><tr><td>/hitokoto/append</td><td>POST</td><td>Y</td><td>N</td><td>添加一言，返回审核队列中新句子的信息</td></tr><tr><td>/hitokoto/:uuid</td><td>GET</td><td>Y</td><td>N</td><td>查看指定一言的信息（通过 UUID）</td></tr><tr><td>/hitokoto/:uuid/mark</td><td>GET</td><td>Y</td><td>N</td><td>查看指定一言的审核标记（通过 UUID）</td></tr><tr><td>/hitokoto/score</td><td>POST</td><td>Y</td><td>N</td><td>为已上线的句子评分，返回评分相关信息</td></tr><tr><td>/hitokoto/score</td><td>GET</td><td>Y</td><td>N</td><td>获得句子的评分信息</td></tr><tr><td>/hitokoto/report</td><td>POST</td><td>Y</td><td>N</td><td>举报一言存在问题，返回提交举报的相关信息</td></tr></tbody></table>`,25),p=[l];function e(r,d,c,E,u,i){return s(),a("div",null,p)}const h=t(o,[["render",e]]);export{q as __pageData,h as default};
